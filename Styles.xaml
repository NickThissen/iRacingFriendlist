<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:iRacingFriendlist.Converters"
                    xmlns:viewModels="clr-namespace:iRacingFriendlist.ViewModels"
                    xmlns:views="clr-namespace:iRacingFriendlist.Views"
                    xmlns:classes="clr-namespace:iRacingFriendlist.Classes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ScrollbarStyles.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!-- Converters -->
    <converters:ColorConverter x:Key="ColorConverter" />
    
    <!-- Settings -->

    <!-- Brushes -->
    <Color x:Key="GlowColor">#33B5E5</Color>
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="GlowBrush" Color="{StaticResource GlowColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="HoverBackground" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="Separator" Color="#565656"></SolidColorBrush>
    <SolidColorBrush x:Key="ListBackground" Color="#343434"></SolidColorBrush>
    
    <LinearGradientBrush x:Key="GlowBrushGradient">
        <GradientStop Offset="0" Color="Black"></GradientStop>
        <GradientStop Offset="1" Color="{StaticResource GlowColor}"></GradientStop>
    </LinearGradientBrush>


    <!-- Styles -->
    <Style TargetType="TabControl" x:Key="TabControlStyle">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border BorderBrush="{DynamicResource GlowBrush}" Background="Transparent" BorderThickness="0,0,0,2">
                            <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                        </Border>

                        <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="{StaticResource Separator}" Background="{DynamicResource ListBackground}">
                            <ContentPresenter  ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource NormalTabItemStyle}"></Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="NormalTabItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border"
                            Margin="3,0"
                            TextBlock.Foreground="White"
                            Background="{StaticResource ListBackground}"
                            BorderThickness="1,1,1,0" BorderBrush="{StaticResource Separator}">
                        <ContentPresenter Margin="10,2"
                                            x:Name="ContentSite" 
                                          ContentSource="Header"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True"
                                          />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GlowBrush}"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="White"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsSelected" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Separator}" />
        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeaderStyle}" />
    </Style>

    <Style TargetType="DataGridRow" x:Key="DataGridRowStyle">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource Separator}" />
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="DataGridColumnHeaderStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border Margin="0"  
                            Background="{StaticResource Separator}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <ContentPresenter TextBlock.Foreground="White"
                                          Margin="5"/>
                            
                            <Thumb x:Name="PART_RightHeaderGripper" 
                                   HorizontalAlignment="Right" 
                                   Grid.Column="1"
                                   Width="5" 
                                   Cursor="SizeWE">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border HorizontalAlignment="Stretch" Background="Transparent">
                                            <Rectangle HorizontalAlignment="Center"
                                                   Width="1"
                                                   Fill="Black" />
                                        </Border>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextboxStyle">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{StaticResource ListBackground}" BorderBrush="{StaticResource Separator}" BorderThickness="1" Margin="0">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="3" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GlowBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="PasswordBox" x:Key="PassboxStyle">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{StaticResource ListBackground}" BorderBrush="{StaticResource Separator}" BorderThickness="1" Margin="0">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="3" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GlowBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="/Fonts/#Roboto" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource ListBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                           BorderThickness="1"
                           Padding="4,2"
                           CornerRadius="0"
                            BorderBrush="{StaticResource Separator}"
                           Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GlowBrush}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Separator}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="border" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="FilterTextbox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="{classes:FontSizeBinding}" />
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border" Background="{StaticResource ListBackground}" BorderBrush="{StaticResource Separator}" BorderThickness="1" Margin="0">
                        <DockPanel>
                            <Image DockPanel.Dock="Right" Source="Resources\search.png" Stretch="Uniform" Height="20" Margin="3" ></Image>
                            <ScrollViewer Margin="3" Background="Transparent" VerticalContentAlignment="Center"
                            x:Name="PART_ContentHost" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource GlowBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="FriendboxStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Background" Value="{StaticResource ListBackground}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource Separator}"></Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource StretchedListboxItem}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="viewModels:Driver">
                    <Border Name="border" HorizontalAlignment="Stretch" 
                            Background="{StaticResource ListBackground}" 
                            BorderThickness="1" 
                            BorderBrush="Transparent">
                        <Border Name="borderInner" Background="Transparent" BorderThickness="0,0,0,1" BorderBrush="{StaticResource Separator}">
                            <DockPanel LastChildFill="True" Margin="0">
                                <Border DockPanel.Dock="Left" VerticalAlignment="Top" Margin="5" CornerRadius="4" BorderThickness="0" Background="{Binding Converter={StaticResource ColorConverter}, ConverterParameter='gradient'}">
                                    <Border Margin="3" CornerRadius="2">
                                        <Border.Background>
                                            <LinearGradientBrush>
                                                <GradientStop Offset="0" Color="#EFEFEF" />
                                                <GradientStop Offset="1" Color="#CDCDCD" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Image Source="{Binding HelmetImage}" RenderOptions.BitmapScalingMode="HighQuality" Width="{classes:FontSizeBinding ConverterParameter='img'}" Height="{classes:FontSizeBinding ConverterParameter='img'}" Margin="2" />
                                    </Border>
                                </Border>

                                <Grid Name="grid" VerticalAlignment="Center" Margin="10,0,5,5">
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{Binding Converter={StaticResource ColorConverter}}"></Setter>
                                            <Setter Property="Margin" Value="0,1,10,1"></Setter>
                                            <Setter Property="FontSize" Value="{classes:FontSizeBinding}"></Setter>
                                        </Style>
                                    </Grid.Resources>
                                    
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
 
                                    <TextBlock 
                                        Text="{Binding Name}" 
                                        Margin="0" 
                                        FontSize="{classes:FontSizeBinding ConverterParameter='large'}" 
                                        FontWeight="Bold" 
                                        TextTrimming="CharacterEllipsis"></TextBlock>
                                    <Image Name="watchIcon" 
                                        Grid.Column="1" 
                                           Source="../Resources/bino.png" 
                                           RenderOptions.BitmapScalingMode="HighQuality" 
                                           Height="10" Margin="0,0,2,0"
                                           VerticalAlignment="Center"/>
                                    <TextBlock 
                                        Grid.Column="2" 
                                        Margin="5,0,5,0" 
                                        Name="typeLabel" 
                                        HorizontalAlignment="Right" 
                                        Text="{Binding OnlineStatusDisplay}" 
                                        FontWeight="Bold"></TextBlock>

                                    <TextBlock Name="statusLabel" 
                                               Text="{Binding Status}" 
                                               Grid.Row="1" Grid.ColumnSpan="3"
                                               TextTrimming="CharacterEllipsis"></TextBlock>

                                    <Grid Name="detailsGrid" Grid.Row="2" Grid.ColumnSpan="3" Visibility="Collapsed">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Name="seriesLabel"  Text="Series:"></TextBlock>
                                        <TextBlock Text="Track:" Grid.Row="1"></TextBlock>
                                        <TextBlock Text="Start time:" Grid.Row="2"></TextBlock>

                                        <TextBlock Name="seriesValue" Grid.Column="1" Text="{Binding Session.Season.SeriesName}" 
                                            TextTrimming="CharacterEllipsis"></TextBlock>
                                        <TextBlock Grid.Column="1" Text="{Binding Session.Track.Name}" Grid.Row="1"
                                            TextTrimming="CharacterEllipsis"></TextBlock>
                                        <TextBlock Grid.Column="1" Text="{Binding Session.StartTimeDisplay}" Grid.Row="2"
                                            TextTrimming="CharacterEllipsis"></TextBlock>
                                    </Grid>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </Border>
                    <DataTemplate.Triggers>
                        <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBackground}"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" 
                                         Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GlowBrush}"></Setter>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBackground}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Session.IsHosted}" Value="True">
                            <Setter TargetName="seriesLabel" Property="Text" Value="Hosted:"></Setter>
                            <Setter TargetName="seriesValue" Property="Text" Value="{Binding Session.SessionName}"></Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Session.UserRole}" Value="Driving"></Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="watchIcon" Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" 
                                         Value="True">
                                </Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=DataContext.IsInSession}"  
                                           Value="True"></Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="detailsGrid" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="statusLabel" Property="Visibility" Value="Collapsed"></Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ListBoxItem" x:Key="StretchedListboxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
    </Style>
    
   
    <!-- Window -->
    <ControlTemplate x:Key="MainWindowControlTemplate" TargetType="Window">
        <Border Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource GlowBrushGradient}" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="0,0,0,2" BorderBrush="{StaticResource GlowBrush}">
                    
                    <Grid Background="{DynamicResource WindowBackgroundBrush}">


                        <TextBlock Foreground="White" FontSize="18" Grid.Column="0" VerticalAlignment="Center" Margin="10,0,0,0" 
                            Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}" />

                        <views:CaptionButtons Margin="0,0,5,0" Grid.Column="1" HorizontalAlignment="Right" Type="Full"
                                                    Foreground="White" FontSize="14" 
                                                    VerticalAlignment="Center" WindowChrome.IsHitTestVisibleInChrome="True"/>


                    </Grid>

                </Border>
                <ContentPresenter Margin="0" Grid.Row="1" Content="{TemplateBinding Content}"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                        ResizeBorderThickness="6"
                        CaptionHeight="30"
                        CornerRadius="0"
                        GlassFrameThickness="0,0,0,1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource MainWindowControlTemplate}"/>
    </Style>

    <ControlTemplate x:Key="LoginWindowControlTemplate" TargetType="Window">
        <Border Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource GlowBrushGradient}" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="0,0,0,2" BorderBrush="{StaticResource GlowBrush}">

                    <Grid Background="{DynamicResource WindowBackgroundBrush}">


                        <TextBlock Foreground="White" FontSize="18" Grid.Column="0" VerticalAlignment="Center" Margin="10,0,0,0" 
                            Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}" />

                        <views:CaptionButtons Margin="0,0,5,0" Grid.Column="1" HorizontalAlignment="Right" Type="Close"
                                                    Foreground="White" FontSize="14"
                                                    VerticalAlignment="Center" WindowChrome.IsHitTestVisibleInChrome="True"/>


                    </Grid>

                </Border>
                <ContentPresenter Margin="0" Grid.Row="1" Content="{TemplateBinding Content}"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="LoginWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                        ResizeBorderThickness="6"
                        CaptionHeight="30"
                        CornerRadius="0"
                        GlassFrameThickness="0,0,0,1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource LoginWindowControlTemplate}"/>
    </Style>
</ResourceDictionary>